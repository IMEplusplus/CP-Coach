-----------------------------------------------------------------------------------------------------------
Labels
  subject -> dependencies, deps1/deps2, [good to know], {related}, /also from this section/
  deps1/deps2 are dependencies that are excludent, learning one of them is enough to learn this subject
-----------------------------------------------------------------------------------------------------------
To do:
- Split into categories/broad subjects
- Tag subjects (offline/online)
- Set difficulties
- Set study presets (OBI/IOI, Brazil subregionals, Latin America regionals, WF)
-----------------------------------------------------------------------------------------------------------

(Hashing???)

Programming:
  Basics
    Recursion
    Bitwise

Paradigms:
  Simulation
  Brute Force
  Complete Search
  Backtracking -> Complete Search
  Greedy
  Divide and Conquer

Sorting:
  Merge sort -> Paradigms: D&C
  Counting Sort
  Radix Sort
  Bucket sort

Search:
  Linear Search
  Binary Search
  Direct Adressing Table
  Meet in the meddle -> Linear Search
  Ternary Search -> Binary Search
  Parallel Binary Search -> Binary Search, Sorting
  Binary Search Maximum (Radewoosh) -> Binary Search

Data Structure:
  Basics
    Array
    Stack
    Queue
    List
    Deque
    Heap (Priority Queue)
    Binary Search Tree (BST)
    Balanced BST (map/set)
    Tree
  Minqueue -> Deque/Stack
    Deque
    2 stacks
  Hash Table -> DS Basics
  Prefix Sum -> DS Basics, /DP/
  Bitmask -> C/C++ Basics: bitwise ops
  Disjoint Set Union (Union Find) -> Graphs Basics, DS Basics
  Fenwick Tree/Binary Indexed Tree (BIT) -> DS Basics, C/C++ Basics: bitwise ops
  Fenwick Tree/Binary Indexed Tree 2D (BIT 2D) -> Fenwick Tree
  Sparse Table -> DS Basics, Binary Lifting
  Sparse Table 2D -> Sparse Table
  Segment Tree -> DS Basics, Graphs Basics
  Segment Tree 2D -> Segment tree
  Segment Tree Dynamic -> Segment Tree
  Segment Tree Beats -> Segment Tree
  Squareroot Decomposition -> DS Basics
  Mo's Algorithm -> DS Basics, Sorting, [Sqrt Decomposition]
    + Zigzag optimization
    + Mo with update -> ?
  Convex Hull Trick -> DS Basics, Geometry Basics, Sorting
  Heavy-Light Decomposition (HLD) -> DS Basics, Graphs Basics, [Segment Tree/BIT]
  Wavelet Tree -> Segment Tree
  Mergesort Tree -> Segment Tree
  Centroid Decomposition -> DS Basics, Graphs Basics
  Treap -> DS Basics, Graphs Basics
  Splay Tree -> DS Basics, Graphs Basics
  Dancing Links (Knuth's Algorithm X) -> ?
  Link-Cut Tree -> Splay Tree
  LiChao Tree -> Convex Hull Tree
  Dynamic Connectivity (offline) -> DSU: Partial Persistent (rollback), Sorting, [Segment Tree]
  Ordered Set -> C++ STL, {Treap}
  KD-Tree -> Geometry Basics, DS Basics
  Quad/Octo-tree -> Geometry Basics, DS Basics

Persistent Data Structures:
  Disjoin Set Union -> DSU
    Partial Persistent (rollback)
    Partial Persistent (history)
  Persistent Segment Tree -> Segment Tree

Graphs:
  Basics <- list everything inside
    Eulerian/Hamiltonian Tour/Path
    Eulerian/Hamiltonian Graph
    Eulerian/Hamiltonian Tour/Path algorithm
    Tree
      Center
      Centroid
      Diameter
      Find Diameter -> Graph Traversal
      Find Center -> Kahn/Find Diameter
  DFS -> Graphs Basics
  BFS -> Graphs Basics
  Graph Traversal -> DFS/BFS
    Path recovery
  Dijkstra -> Graphs Basics, Greedy, Sorting, Heap, {Prim}
  Bellman Ford -> Graphs Basics
  SPFA -> Graphs Basics, Bellman Ford
  Floyd-Warshall -> Graphs Basics, [DP Basics]
  Connected Components -> Graph Traversal, [Disjoint Set Union], {Flood Fill} <- too close to traversal
  Flood Fill -> Graph Traversal, {Connected Components} <- too close to traversal
  Topological Sort -> Graphs Basics: DAG
    Kahn
    DFS
  Bipartite Graph Check -> Graphs Basics
  Articulation Points and Bridges
    Tarjan -> DFS, {SCC: Tarjan}
  Minimum Spanning Tree
    Prim -> Graphs Basics, Greedy, Sorting, Heap, {Dijkstra}
    Kruskal -> Disjoint Set Union, Sorting
  Strongly Connected Components
    Kosaraju -> DFS
    Tarjan -> DFS, {Articulation: Tarjan}
  Euler Tour -> Graphs Basics
  LCA
    Sqrt Decomposition -> Sqrt Decomposition
    Segtree + Euler Tour -> Segment Tree, Euler Tour
    Binary Lifting -> Sparse Table
  Maximum (Cardinality Bipartite) Matching
    Kuhn -> DFS, [Basics: Bipartite Graph]
  Maximum (Cardinality Bipartite) Weighted Matching
    Hungarian Method -> ?, [Kuhn], {Flow: Min-cost Max-flow}
  2-SAT -> SCC, Topological Sort
    + Auxiliary Nodes technique
  Erdos-Gallai theorem -> Graphs Basics
  Stoer-Wagner -> Graphs Basics
  Edmond's Blossom -> Link-Cut Tree?
  Prufer Sequence ->
  Matroids
    Matroid Intersection

Network Flow:
  Maximum Flow
    Ford-Fulkerson method -> DFS
    Edmond-Karp -> BFS
    Dinic -> BFS, DFS
  Minimum Cut -> ?, [Maximum Flow]
  Minimum Cost Maximum Flow -> Edmond-Karp, Dijkstra/Bellman-Ford/SPFA
  Hopcroft Karp -> ?
  Dilworth's Theorem -> ?
  Scaling Flow -> ?

DP:
  Basics
    Tabulation -> Programming Basics - Recursion
    Memoization -> DS Basics - Array
  Prefix Sum -> DS Basics - Array
  Longest Increasing Subsequence
    O(N^2)
    O(NlogN) -> Search: Binary Search
  Knapsack
    Knapsack 0-1
    Knapsack 0-1 with costs
    Knapsack 0-k
    Knapsack 0-k with costs
    Knapsack bounded sum
    Knapsack low maximum value -> Dijkstra
    Knapsack D&C all except one O(N*W*logN) -> Paradigms: D&C
    Knapsack merge -> [Fast Fourier Transform]
  Coin Change
  Digit DP
  Bitmask DP -> Programming: Bitwise
  DP on tree -> Graphs Basics: Tree, /Graphs/
  Steiner Tree -> ?, /Graphs/
  Edit Distance -> /Strings/
  Longest Common Subsequence -> /Strings/
  Minimum Vertex Cover on Tree -> DP on tree, /Graphs/
  Broken Profile DP -> ?

  Optimization:
    Divide and Conquer Optimization O(n^2logn) -> Paradigms: D&C
    Knuth Optimization O(n^2) -> Divide and Conquer Optimization
    Convex Hull Trick O(n^2(logn)) or O(nlogn) -> ?
    Slope Trick Optimization -> ?
    Alien's Trick Optimization -> ?

Math:
  Basics
  Fast Exponentiation -> Paradigms: D&C
  Matrix Fast Exponentiation -> Fast Exponentiation, Math Basics: Matrixes
  Cycle Finding (Floyd) -> Graphs Basics: Cycles
  Probabilities -> ?
    Expected Value
  Combinatorics -> ?
  Linear Equations -> ?
  Linear Recurrences -> Matrix Fast Exponentiation
  Fast Fourier Transform
    Number Theory Transform
      + fast exponential technique
    Fast-Walsh Radamard Transform
    + Transforming big numbers (write as X = k*A + B)
    + Two multiplications using a single transform
  Karatsuba -> Paradigms: D&C
  Simplex (Linear Programming) -> ?
  Gauss Elimination
    Modular Elimination
    XOR Elimination
    + XOR-3-SAT
  Hall's Marriage Theorem -> ?
  Calculus -> ?
  Numerical methods
    Newton's method
    (Forth Order-Runge Kutta Method)
  Miscellaneous
    Jensen's inequality

Number Theory:
  Basics
    Greatest Common Divisor
    Lowest Common Multiple
    Sieve of Eratothenes
    Divisors O(sqrt(N))
    Prime Factors
  Extended Euclid
  Euler Phi
  Modulo Arithmetic
    Basics
    Fermat's Little Theorem
    Euler's Theorem
    Chinese Remainder Theorem -> Modulo Arithmetic
  Primarily Test (Miller-Rabin)
  Divisors of Large Numbers (Pollard-Rho)
  Segmented Sieve of Erasthotenes -> Sieve of Eratothenes
  Mobius Function
  Mobius Inversion Function
  GCDSUM
  Goldbach's Conjecture
  Burnside's Lemma

Strings:
  Basics
    Matching O(N^2)
  Trie -> DS Basics: Trees
  Matching O(N+M)
    Knuth-Morris-Pratt (KMP)
      Prefix Function
      KMP Automata
    Z function
    Rabin Karp -> Polynomial (Rolling) Hashing
  Palindromes (Manacher)
  Multiple Matching (Aho-Corasick) -> Graphs: BFS, KMP
  Suffix Structures -> Trie
    Suffix Array -> Sorting: Counting Sort
    Suffix Tree -> ?
    Suffix Automata -> ?

Geometry:
  Basics
    Points
    Lines
    Circles
  Line Sweep
  Radial Sweep
  Rotating Calipers
  Convex Hull
    Graham Scan -> Radial Sweep
    Monotone Chain -> (Sorted arrays merge?)
  Closest Pair of Points O(nlogn)
    D&C -> Paradigms: D&C, Sorting
    Line Sweep -> ?
  Intersection of Segments O(nlogn + k)
    Line Sweep -> DS Basics: Set, Line Sweep
  Convex Hull Trick -> ?
  Clipping Polygon / Polyhedra -> ?
  Farthest Pair of Points -> Convex Hull

Game Theory:
  Sprague-Grundy Theorem
  Staircase Nim -> Sprague-Grundy Theorem
  MisÃ¨re Nim -> Sprague-Grundy Theorem
  Hackenbush
  Infinite Games(Grundy extended)

Miscellaneus/Techniques
  ? Line Sweep (offline)
  Small to Large
  Union by Size
  Recursive Descent Parser
  Minimum Arborescence (Edmond's algorithm)
  Binary Lifting
  Range Minimum Query (RMQ)
  Auxiliary Range Nodes (use Segment Tree nodes)
  Interactive problems
